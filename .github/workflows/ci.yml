name: PiEdge EduKit CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  core:
    name: "${{ matrix.os }} / Py 3.12"
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # Cache pip (Linux/macOS)
      - name: Cache pip (Linux/macOS)
        if: runner.os != 'Windows'
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py312-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-py312-

      # Cache pip (Windows) â€” NOTE the quoted path
      - name: Cache pip (Windows)
        if: runner.os == 'Windows'
        uses: actions/cache@v4
        with:
          path: "~\\AppData\\Local\\pip\\Cache"
          key: ${{ runner.os }}-py312-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-py312-

      - name: Install
        run: |
          python -m pip install --upgrade pip wheel setuptools
          python -m pip install -r requirements.txt
          python -m pip install -e .

      - name: Verify
        run: python verify.py

      - name: Upload receipt
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: progress-${{ matrix.os }}
          path: progress/receipt.json
          if-no-files-found: ignore
          retention-days: 7

  smoke-macos:
    name: macos-14 / Py 3.12 (smoke)
    runs-on: macos-14
    timeout-minutes: 15
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Minimal import smoke
        run: |
          python -c "print('Python OK'); import sys; print(sys.version)"
          python - <<'PY'
          try:
              import numpy, onnx
              print("Imports OK:", numpy.__version__, onnx.__version__)
          except Exception as e:
              print("Smoke failed:", e); raise
          PY
